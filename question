?               # ::id export_amr.84 ::2017-03-17 17:41:32
                # ::snt 小 [松鼠] 感到 很 奇怪 , * 自言自语 地 说 :" 是 谁 把 花生 摘 走 了 呢 ?"
                # ::wid x1_小 x2_松鼠 x3_感到 x4_很 x5_奇怪 x6_, x7_自言自语 x8_地 x9_说 x10_:" x11_是 x12_谁 x13_把 x14_花生 x15_摘 x16_走 x17_了 x18_呢 x19_?"
                (x20 / and
                      :op1()  (x3 / 感到-01
                            :arg0()  (x2 / 松鼠
                                  :arg0-of()  (x1 / 小-01
                ))            :arg1()  (x5 / 奇怪
                                  :degree()  (x4 / 很-01
                )))      :op2()  (x9 / 说-01
                            :arg0()  (x2 / 松鼠
                )            :manner(x8/地)  (x7 / 自言自语
                )            :arg1()  (x15 / 摘-01
                                  :arg1(x13/把)  (x14 / 花生
                )                  :arg0(x11/是)  (x12 / amr-unknown
                )                  :cause-of()  (x16 / 走-01
                                        :arg0()  (x14 / 花生
                ))                  :aspect()  (x17 / 了
                )                  :mode()  (x18_x19 / interrogative
                ))))

# ::id export_amr.102 ::2017-03-17 22:12:36
# ::snt 他 和 雪 孩子 又 唱 又 跳 , 玩 的 很 开心 。
# ::wid x1_他 x2_和 x3_雪 x4_孩子 x5_又 x6_唱 x7_又 x8_跳 x9_, x10_玩 x11_的 x12_很 x13_开心 x14_。
(x15 / and
      :op1()  (x17 / and
            :op1(x5/又)  (x6 / 唱-01
                  :arg0()  (x2 / and
                        :op1()  (x1 / 他
)                        :op2()  (x4 / 孩子
                              :consist-of()  (x3 / 雪
))))            :op2(x7/又)  (x8 / 跳-01
                  :arg0()  (x2 / and
)))      :op2()  (x13 / 开心-01
            :degree()  (x12 / 很
)            :arg1(x11/的)  (x10 / 玩
)            :arg0()  (x2 / and
)))

# ::id export_amr.107 ::2017-03-17 23:38:47
# ::snt [雪 孩子] 看见 小 白兔 家 着火 了 , * 就 飞快 地 跑 了 过去 。
# ::wid x1_雪 x2_孩子 x3_看见 x4_小 x5_白兔 x6_家 x7_着火 x8_了 x9_, x10_就 x11_飞快 x12_地 x13_跑 x14_了 x15_过去 x16_。
(x17 / temporal
      :arg1()  (x3 / 看见-01
            :arg0()  (x2 / 孩子
                  :consist-of()  (x1 / 雪
))            :arg1()  (x7 / 着火-01
                  :arg0()  (x6 / 家
                        :poss()  (x5 / 白兔
                              :arg0-of()  (x4 / 小
)))                  :aspect()  (x8 / 了
)))      :arg2()  (x13 / 跑-01
            :arg0()  (x2 / 孩子
)            :manner(x12/地)  (x11 / 飞快
)            :mod()  (x10 / 就
)            :cause-of()  (x15 / 过去-02
                  :arg0()  (x2 / 孩子
))            :aspect()  (x14 / 了
)))